}
View(imp_data)
View(imp_data)
ps <- glm(qsmk ~ sex+age+race, data = subset(imp_data))$fitted.values
qsmk <- imp_data[imp_data$.imp == ii, ]$qsmk
ps <- glm(qsmk ~ sex+age+race, data = subset(imp_data))$fitted.values
qsmk <- imp_data$qsmk
num <- mean(qsmk) * qsmk + (1 - mean(qsmk)) * (1 - qsmk)
den <- ps * qsmk + (1 - ps) * (1 - qsmk)
sw <- num/den
summary(num)
mod <- glm(wt82_71 ~ qsmk, weights = sw, data = subset(imp_data))
est.psi <- rbind(est.psi, coef(mod)[2])
est.psi
knitr::opts_chunk$set(echo = TRUE)
library(here)
library(tidyverse)
thm <- theme_classic() +
theme(
legend.position = "top",
legend.background = element_rect(fill = "transparent", colour = NA),
legend.key = element_rect(fill = "transparent", colour = NA)
)
theme_set(thm)
here::i_am("assignment/Section4_Assignment.Rmd")
pacman::p_load(tidyverse, here, dplyr, gtsummary, gt, webshot2,sandwich,stats,here, ggplot2,stats, graphics, splines,boot,ggExtra,formatR,
gridExtra,skimr,Hmisc,RColorBrewer, lmtest)
s4file_loc <-here::here("data/section4_q4_data.csv")
s4data <-read_csv(s4file_loc)
est.psi <- NULL
est.psi2<- NULL
set.seed(16)
for(ii in 1:200){ ## set the max number to 200!!, do ipw then g comp
index <- sample(1:nrow(s4data),nrow(s4data),replace=T)
boot_dat <- s4data[index,]
mice_imp <- mice(boot_dat,
#seed=123,
m=1,
maxit=20,
printFlag = F,
method=ini$method,
pMatrix=pMat)
imp_data <- complete(mice_imp,action="long")
#ipw
ps <- glm(qsmk ~ sex+age+race, data = subset(imp_data))$fitted.values
qsmk <- imp_data$qsmk
num <- mean(qsmk) * qsmk + (1 - mean(qsmk)) * (1 - qsmk)
den <- ps * qsmk + (1 - ps) * (1 - qsmk)
sw <- num/den
summary(num)
mod <- glm(wt82_71 ~ qsmk, weights = sw, data = subset(imp_data))
est.psi <- rbind(est.psi, coef(mod)[2])
##do not need SE portion for IPW
#g function
modY <- lm(wt82_71 ~ qsmk+age+sex+race,data=imp_data)
pY1 <- mean(predict(modY,newdata=transform(imp_data,qsmk=1)))
pY0 <- mean(predict(modY,newdata=transform(imp_data,qsmk=0)))
est.gcomp <- rbind(est.gcomp,pY1-pY0)
}
pacman::p_load(tidyverse, here, dplyr, gtsummary, gt, webshot2,sandwich,stats,here, ggplot2,stats, graphics, splines,boot,ggExtra,formatR,
gridExtra,skimr,Hmisc,RColorBrewer, lmtest, mice)
est.psi <- NULL
est.psi2<- NULL
set.seed(16)
for(ii in 1:200){ ## set the max number to 200!!, do ipw then g comp
index <- sample(1:nrow(s4data),nrow(s4data),replace=T)
boot_dat <- s4data[index,]
mice_imp <- mice(boot_dat,
#seed=123,
m=1,
maxit=20,
printFlag = F,
method=ini$method,
pMatrix=pMat)
imp_data <- complete(mice_imp,action="long")
#ipw
ps <- glm(qsmk ~ sex+age+race, data = subset(imp_data))$fitted.values
qsmk <- imp_data$qsmk
num <- mean(qsmk) * qsmk + (1 - mean(qsmk)) * (1 - qsmk)
den <- ps * qsmk + (1 - ps) * (1 - qsmk)
sw <- num/den
summary(num)
mod <- glm(wt82_71 ~ qsmk, weights = sw, data = subset(imp_data))
est.psi <- rbind(est.psi, coef(mod)[2])
##do not need SE portion for IPW
#g function
modY <- lm(wt82_71 ~ qsmk+age+sex+race,data=imp_data)
pY1 <- mean(predict(modY,newdata=transform(imp_data,qsmk=1)))
pY0 <- mean(predict(modY,newdata=transform(imp_data,qsmk=0)))
est.gcomp <- rbind(est.gcomp,pY1-pY0)
}
est.psi <- NULL
est.gcomp<- NULL
set.seed(16)
for(ii in 1:200){ ## set the max number to 200!!, do ipw then g comp
index <- sample(1:nrow(s4data),nrow(s4data),replace=T)
boot_dat <- s4data[index,]
mice_imp <- mice(boot_dat,
#seed=123,
m=1,
maxit=20,
printFlag = F,
method=ini$method,
pMatrix=pMat)
imp_data <- complete(mice_imp,action="long")
#ipw
ps <- glm(qsmk ~ sex+age+race, data = subset(imp_data))$fitted.values
qsmk <- imp_data$qsmk
num <- mean(qsmk) * qsmk + (1 - mean(qsmk)) * (1 - qsmk)
den <- ps * qsmk + (1 - ps) * (1 - qsmk)
sw <- num/den
summary(num)
mod <- glm(wt82_71 ~ qsmk, weights = sw, data = subset(imp_data))
est.psi <- rbind(est.psi, coef(mod)[2])
##do not need SE portion for IPW
#g function
modY <- lm(wt82_71 ~ qsmk+age+sex+race,data=imp_data)
pY1 <- mean(predict(modY,newdata=transform(imp_data,qsmk=1)))
pY0 <- mean(predict(modY,newdata=transform(imp_data,qsmk=0)))
est.gcomp <- rbind(est.gcomp,pY1-pY0)
}
set.seed(16)
for(ii in 1:200){ ## set the max number to 200!!, do ipw then g comp
index <- sample(1:nrow(s4data),nrow(s4data),replace=T)
boot_dat <- s4data[index,]
mice_imp <- mice(boot_dat,
#seed=123,
m=1,
maxit=20,
printFlag = F,
method=ini$method,
pMatrix=pMat)
imp_data <- complete(mice_imp,action="long")
#ipw
ps <- glm(qsmk ~ sex+age+race, data = subset(imp_data))$fitted.values
qsmk <- imp_data$qsmk
num <- mean(qsmk) * qsmk + (1 - mean(qsmk)) * (1 - qsmk)
den <- ps * qsmk + (1 - ps) * (1 - qsmk)
sw <- num/den
summary(num)
mod <- glm(wt82_71 ~ qsmk, weights = sw, data = subset(imp_data))
est.psi <- rbind(est.psi, coef(mod)[2])
#g function
modY <- lm(wt82_71 ~ qsmk+age+sex+race,data=imp_data)
pY1 <- mean(predict(modY,newdata=transform(imp_data,qsmk=1)))
pY0 <- mean(predict(modY,newdata=transform(imp_data,qsmk=0)))
est.gcomp <- rbind(est.gcomp,pY1-pY0)
est.psi <- NULL
est.gcomp<- NULL
set.seed(16)
for(ii in 1:200){ ## set the max number to 200!!, do ipw then g comp
index <- sample(1:nrow(s4data),nrow(s4data),replace=T)
boot_dat <- s4data[index,]
mice_imp <- mice(boot_dat,
#seed=123,
m=1,
maxit=20,
printFlag = F,
method=ini$method,
pMatrix=pMat)
imp_data <- complete(mice_imp,action="long")
#ipw
ps <- glm(qsmk ~ sex+age+race, data = subset(imp_data))$fitted.values
qsmk <- imp_data$qsmk
num <- mean(qsmk) * qsmk + (1 - mean(qsmk)) * (1 - qsmk)
den <- ps * qsmk + (1 - ps) * (1 - qsmk)
sw <- num/den
summary(num)
mod <- glm(wt82_71 ~ qsmk, weights = sw, data = subset(imp_data))
est.psi <- rbind(est.psi, coef(mod)[2])
##do not need SE portion for IPW
#g function
modY <- lm(wt82_71 ~ qsmk+age+sex+race,data=imp_data)
pY1 <- mean(predict(modY,newdata=transform(imp_data,qsmk=1)))
pY0 <- mean(predict(modY,newdata=transform(imp_data,qsmk=0)))
est.gcomp <- rbind(est.gcomp,pY1-pY0)
}
mod <- glm(wt82_71 ~ qsmk, weights = sw, data = subset(imp_data),family=binomial(link="logit"))
summary(num)
den
summary(den)
ps <- glm(qsmk ~ sex+age+race, data = subset(imp_data))$fitted.values
qsmk <- imp_data$qsmk
summary(qsmk)
est.psi <- NULL
est.gcomp<- NULL
set.seed(16)
for(ii in 1:200){ ## set the max number to 200!!, do ipw then g comp
index <- sample(1:nrow(s4data),nrow(s4data),replace=T)
boot_dat <- s4data[index,]
mice_imp <- mice(boot_dat,
#seed=123,
m=1,
maxit=20,
printFlag = F,
method=ini$method,
pMatrix=pMat)
imp_data <- complete(mice_imp,action="long")
#ipw
ps <- glm(qsmk ~ sex+age+race, data = subset(imp_data))$fitted.values
qsmk <- imp_data$qsmk
num <- mean(qsmk) * qsmk + (1 - mean(qsmk)) * (1 - qsmk)
den <- ps * qsmk + (1 - ps) * (1 - qsmk)
sw <- num/den
mod <- glm(wt82_71 ~ qsmk, weights = sw, data = subset(imp_data),family=binomial(link="logit"))
est.psi <- rbind(est.psi, coef(mod)[2])
##do not need SE portion for IPW
#g function
modY <- lm(wt82_71 ~ qsmk+age+sex+race,data=imp_data)
pY1 <- mean(predict(modY,newdata=transform(imp_data,qsmk=1)))
pY0 <- mean(predict(modY,newdata=transform(imp_data,qsmk=0)))
est.gcomp <- rbind(est.gcomp,pY1-pY0)
}
#ipw
ps <- glm(qsmk ~ sex+age+race, data = (imp_data), family=binomial(link="logit"))$fitted.values
qsmk <- imp_data$qsmk
num <- mean(qsmk) * qsmk + (1 - mean(qsmk)) * (1 - qsmk)
den <- ps * qsmk + (1 - ps) * (1 - qsmk)
summary(den)
ps <- glm(qsmk ~ sex+age+race, data = (imp_data), family=binomial(link="logit"))$fitted.values
qsmk <- imp_data$qsmk
num <- mean(qsmk) * qsmk + (1 - mean(qsmk)) * (1 - qsmk)
den <- ps * qsmk + (1 - ps) * (1 - qsmk)
sw <- num/den
mod <- lm(wt82_71 ~ qsmk, weights = sw, data = subset(imp_data))
est.psi <- rbind(est.psi, coef(mod)[2])
est.psi
est.psi <- NULL
est.gcomp<- NULL
set.seed(16)
for(ii in 1:200){ ## set the max number to 200!!, do ipw then g comp
index <- sample(1:nrow(s4data),nrow(s4data),replace=T)
boot_dat <- s4data[index,]
mice_imp <- mice(boot_dat,
#seed=123,
m=1,
maxit=20,
printFlag = F,
method=ini$method,
pMatrix=pMat)
imp_data <- complete(mice_imp,action="long")
#ipw
ps <- glm(qsmk ~ sex+age+race, data = (imp_data), family=binomial(link="logit"))$fitted.values
qsmk <- imp_data$qsmk
num <- mean(qsmk) * qsmk + (1 - mean(qsmk)) * (1 - qsmk)
den <- ps * qsmk + (1 - ps) * (1 - qsmk)
sw <- num/den
mod <- lm(wt82_71 ~ qsmk, weights = sw, data = subset(imp_data))
est.psi <- rbind(est.psi, coef(mod)[2])
##do not need SE portion for IPW
#g function
modY <- lm(wt82_71 ~ qsmk+age+sex+race,data=imp_data)
pY1 <- mean(predict(modY,newdata=transform(imp_data,qsmk=1)))
pY0 <- mean(predict(modY,newdata=transform(imp_data,qsmk=0)))
est.gcomp <- rbind(est.gcomp,pY1-pY0)
}
library(mice)
factor_names <- c("sex", "race")
s4data[, factor_names] <- lapply(s4data[, factor_names], factor)
ini <- mice(s4data, seed = 16, maxit = 0)
ini$method
apply(ini$imp$age, 2, table)
options(width = 90)
pMatrix <- ini$predictorMatrix
write.csv(pMatrix, here("data/pMatrix.csv"))
pMatrix
pMat <- read_csv(here("data/pMatrix1.csv"))[, -1]
pMat <- as.matrix(pMat)
row.names(pMat) <- colnames(pMat)
pMat
#mice_imp <- mice(s4data, seed = 16, m = 200, maxit = 20, printFlag = F, method = ini$method, pMatrix = pMat)
est.psi <- NULL
est.gcomp<- NULL
set.seed(16)
for(ii in 1:200){ ## set the max number to 200!!, do ipw then g comp
index <- sample(1:nrow(s4data),nrow(s4data),replace=T)
boot_dat <- s4data[index,]
mice_imp <- mice(boot_dat,
#seed=123,
m=1,
maxit=20,
printFlag = F,
method=ini$method,
pMatrix=pMat)
imp_data <- complete(mice_imp,action="long")
#ipw
ps <- glm(qsmk ~ sex+age+race, data = (imp_data), family=binomial(link="logit"))$fitted.values
qsmk <- imp_data$qsmk
num <- mean(qsmk) * qsmk + (1 - mean(qsmk)) * (1 - qsmk)
den <- ps * qsmk + (1 - ps) * (1 - qsmk)
sw <- num/den
mod <- lm(wt82_71 ~ qsmk, weights = sw, data = subset(imp_data))
est.psi <- rbind(est.psi, coef(mod)[2])
##do not need SE portion for IPW
#g function
modY <- lm(wt82_71 ~ qsmk+age+sex+race,data=imp_data)
pY1 <- mean(predict(modY,newdata=transform(imp_data,qsmk=1)))
pY0 <- mean(predict(modY,newdata=transform(imp_data,qsmk=0)))
est.gcomp <- rbind(est.gcomp,pY1-pY0)
}
est.gcomp
est.psi
sd(est.psi)
sd(est.psi)
est.psi
mean(est.psi)
sd(est.psi)
mean(est.gcomp)
sd(est.gcomp)
mean_psi<-mean(est.psi)
sd_psi<-sd(est.psi)
se_psi<-sd_psi/sqrt(200)
mean_gcomp<-mean(est.gcomp)
sd_gcomp<-sd(est.gcomp)
se_gcomp<-sd_gcomp/sqrt(200)
se_gcomp
est.gcomp
mean_gcomp
se_gcomp
mean_psi
se_psi
mean_gcomp
se_gcomp
S4_Q4_table <- tibble(Method = c("PSI","GComp"),
`Average Treatment Effect` = c("3.16	(0.04)", "0.14	(3.21, 0.04)"))
View(S4_Q4_table)
S4_Q4_table <- tibble(Method = c("PSI","GComp"),
`Average Treatment Effect` = c("3.16	(0.04)", "3.21, (0.04)"))
S4_Q4_table <- tibble(Method = c("PSI","GComp"),
`Average Treatment Effect` = c("3.16", "3.21"),
`Standard Error` = c("0.04","0.04"),
`95% CI` = c("",""))
1.96*se_gcomp
CI_gcomp<-1.96*se_gcomp
mean_gcomp+CI_gcomp
UL_CI_gcomp<-mean_gcomp+CI_gcomp
LL_CI_gcomp<-mean_gcomp-CI_gcomp
S4_Q4_table <- tibble(Method = c("PSI","GComp"),
`Average Treatment Effect` = c("3.16", "3.21"),
`Standard Error` = c("0.04","0.04"),
`95% CI` = c((UL_CI_gcomp,LL_CI_gcomp), )
S4_Q4_table <- tibble(Method = c("PSI","GComp"),
`Average Treatment Effect` = c("3.16", "3.21"),
`Standard Error` = c("0.04","0.04"),
`95% CI` = c(((UL_CI_gcomp)(LL_CI_gcomp)),"" ))
UL_CI_gcomp<-mean_gcomp+CI_gcomp
LL_CI_gcomp<-mean_gcomp-CI_gcomp
UL_CI_gcomp
LL_CI_gcomp
mean_psi<-mean(est.psi)
sd_psi<-sd(est.psi)
se_psi<-sd_psi/sqrt(200)
CI_psi-1.96*se_psi
mean_psi<-mean(est.psi)
sd_psi<-sd(est.psi)
se_psi<-sd_psi/sqrt(200)
CI_psi<-1.96*se_psi
UL_CI_psi<-mean_psi+CI_psi
LL_CI_psi<-mean_psi-CI_psi
UL_CI_psi
LL_CI_psi
S4_Q4_table <- tibble(Method = c("PSI","GComp"),
`Average Treatment Effect` = c("3.16", "3.21"),
`Standard Error` = c("0.04","0.04"),
`95% CI` = c("3.13-3.29", "3.08-3.25"))
sd_psi
mean_psi<-mean(est.psi)
sd_psi<-sd(est.psi)
se_psi<-sd_psi/sqrt(200)
CI_psi<-1.96*sd_psi
UL_CI_psi<-mean_psi+CI_psi
LL_CI_psi<-mean_psi-CI_psi
UL_CI_psi
LL_CI_psi
mean_psi<-mean(est.psi)
sd_psi<-sd(est.psi)
se_psi<-sd_psi/sqrt(200)
CI_psi<-1.96*sd_psi
UL_CI_psi<-mean_psi+CI_psi
LL_CI_psi<-mean_psi-CI_psi
mean_gcomp<-mean(est.gcomp)
sd_gcomp<-sd(est.gcomp)
se_gcomp<-sd_gcomp/sqrt(200)
CI_gcomp<-1.96*sd_gcomp
UL_CI_gcomp<-mean_gcomp+CI_gcomp
LL_CI_gcomp<-mean_gcomp-CI_gcomp
UL_CI_psi
LL_CI_psi
UL_CI_gcomp
LL_CI_gcomp
S4_Q4_table <- tibble(Method = c("PSI","GComp"),
`Average Treatment Effect` = c("3.16", "3.21"),
`Standard Error` = c("0.04","0.04"),
`95% CI` = c("2.00-4.33", "2.04-4.38"))
sd_psi
sd_gcomp
S4_Q4_table <- tibble(Method = c("PSI","GComp"),
`Average Treatment Effect` = c("3.16", "3.21"),
`Standard Error` = c("0.59","0.60"),
`95% CI` = c("2.00-4.33", "2.04-4.38"))
S4_Q4_table <- tibble(Method = c("PSI","GComp"),
`Average Treatment Effect` = c("3.16", "3.21"),
`Standard Error` = c("0.59","0.60"),
`95% CI` = c("2.00-4.33", "2.04-4.38"))
view(S4_Q4_table)
##What type of imputation techniques can you use with non-monotone missing data.
You cannot use ip weights for non-monotone. You must use iterative imputation techniques (MICE), thus missing data is imputed using previously imputed data.
knitr::opts_chunk$set(echo = TRUE)
thm <- theme_classic() +
theme(
legend.position = "top",
legend.background = element_rect(fill = "transparent", colour = NA),
legend.key = element_rect(fill = "transparent", colour = NA)
)
theme_set(thm)
here::i_am("assignment/Section4_Assignment.Rmd")
pacman::p_load(tidyverse, here, dplyr, gtsummary, gt, webshot2,sandwich,stats,here, ggplot2,stats, graphics, splines,boot,ggExtra,formatR,
gridExtra,skimr,Hmisc,RColorBrewer, lmtest, mice)
s4file_loc <-here::here("data/section4_q4_data.csv")
s4data <-read_csv(s4file_loc)
est.psi <- NULL
est.gcomp<- NULL
set.seed(16)
for(ii in 1:200){ ## set the max number to 200!!, do ipw then g comp
index <- sample(1:nrow(s4data),nrow(s4data),replace=T)
boot_dat <- s4data[index,]
mice_imp <- mice(boot_dat,
#seed=123,
m=1,
maxit=20,
printFlag = F,
method=ini$method,
pMatrix=pMat)
imp_data <- complete(mice_imp,action="long")
#ipw
ps <- glm(qsmk ~ sex+age+race, data = (imp_data), family=binomial(link="logit"))$fitted.values
qsmk <- imp_data$qsmk
num <- mean(qsmk) * qsmk + (1 - mean(qsmk)) * (1 - qsmk)
den <- ps * qsmk + (1 - ps) * (1 - qsmk)
sw <- num/den
mod <- lm(wt82_71 ~ qsmk, weights = sw, data = subset(imp_data))
est.psi <- rbind(est.psi, coef(mod)[2])
##do not need SE portion for IPW
#g function
modY <- lm(wt82_71 ~ qsmk+age+sex+race,data=imp_data)
pY1 <- mean(predict(modY,newdata=transform(imp_data,qsmk=1)))
pY0 <- mean(predict(modY,newdata=transform(imp_data,qsmk=0)))
est.gcomp <- rbind(est.gcomp,pY1-pY0)
}
knitr::opts_chunk$set(echo = TRUE)
thm <- theme_classic() +
theme(
legend.position = "top",
legend.background = element_rect(fill = "transparent", colour = NA),
legend.key = element_rect(fill = "transparent", colour = NA)
)
theme_set(thm)
here::i_am("assignment/Section4_Assignment.Rmd")
pacman::p_load(tidyverse, here, dplyr, gtsummary, gt, webshot2,sandwich,stats,here, ggplot2,stats, graphics, splines,boot,ggExtra,formatR,
gridExtra,skimr,Hmisc,RColorBrewer, lmtest, mice)
s4file_loc <-here::here("data/section4_q4_data.csv")
s4data <-read_csv(s4file_loc)
knitr::opts_chunk$set(echo = TRUE)
thm <- theme_classic() +
theme(
legend.position = "top",
legend.background = element_rect(fill = "transparent", colour = NA),
legend.key = element_rect(fill = "transparent", colour = NA)
)
theme_set(thm)
here::i_am("assignment/Section4_Assignment.Rmd")
pacman::p_load(tidyverse, here, dplyr, gtsummary, gt, webshot2,sandwich,stats,here, ggplot2,stats, graphics, splines,boot,ggExtra,formatR,
gridExtra,skimr,Hmisc,RColorBrewer, lmtest, mice)
s4file_loc <-here::here("data/section4_q4_data.csv")
s4data <-read_csv(s4file_loc)
pacman::p_load(tidyverse, here, dplyr, gtsummary, gt, webshot2,sandwich,stats,here, ggplot2,stats, graphics, splines,boot,ggExtra,formatR,
gridExtra,skimr,Hmisc,RColorBrewer, lmtest, mice)
knitr::opts_chunk$set(echo = TRUE)
thm <- theme_classic() +
theme(
legend.position = "top",
legend.background = element_rect(fill = "transparent", colour = NA),
legend.key = element_rect(fill = "transparent", colour = NA)
)
theme_set(thm)
here::i_am("assignment/Section4_Assignment.Rmd")
s4file_loc <-here::here("data/section4_q4_data.csv")
s4data <-read_csv(s4file_loc)
view(S4_Q4_table)
view(S4_Q4_table)
pacman::p_load(tidyverse, here, dplyr, gtsummary, gt, webshot2,sandwich,stats,here, ggplot2,stats, graphics, splines,boot,ggExtra,formatR,
gridExtra,skimr,Hmisc,RColorBrewer, lmtest, mice,gridExtra)
knitr::opts_chunk$set(echo = TRUE)
thm <- theme_classic() +
theme(
legend.position = "top",
legend.background = element_rect(fill = "transparent", colour = NA),
legend.key = element_rect(fill = "transparent", colour = NA)
)
theme_set(thm)
here::i_am("assignment/Section4_Assignment.Rmd")
s4file_loc <-here::here("data/section4_q4_data.csv")
s4data <-read_csv(s4file_loc)
library(gridExtra)
grid.table(S4_Q4_table)
S4_Q4_table <- tibble(Method = c("PSI","GComp"),
`Average Treatment Effect` = c("3.16", "3.21"),
`Standard Error` = c("0.59","0.60"),
`95% CI` = c("2.00-4.33", "2.04-4.38"))
grid.table(S4_Q4_table)
view(grid.table(S4_Q4_table))
knitr::kable(S4_Q4_table, caption= "Average Treatement Effect and the 95% CIs using Standard Deviation for the relationships between quitting smoking and change in weight between 1971-82")
