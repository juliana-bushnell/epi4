xlim(0,1)
final.positivity.graph
final.positivity.graph<-ggplot(data=final.pos.df) +
ylab("Density") + xlab("Propensity Score for Final model") +
scale_color_manual(values=c("#000000","#D55E00")) +
geom_density(aes(x= final$propensity_score, group=final.exposure, color=final.exposure)) +
xlim(0,1)
final.positivity.graph
ggplot(final.pos.df) +
geom_density(aes(propensity_score,
group=factor(exposure),
color=factor(exposure)))
ggplot(final.pos.df) +
geom_density(aes(propensity_score,
group=factor(final.exposure),
color=factor(final.exposure)))
final.pos.df
ggplot(final.pos.df) +
geom_density(aes(final.propensity_score,
group=factor(final.exposure),
color=factor(final.exposure)))
final.positivity.graph<-ggplot(data=final.pos.df) +
scale_y_continuous(expand=c(0,0)) +
scale_x_continuous(expand=c(0,0))+
ylab("Density") + xlab("Propensity Score for Final model") +
scale_color_manual(values=c("#000000","#D55E00")) +
geom_density(aes(x= final.propensity_score, group=final.exposure, color=final.exposure)) +
xlim(0,1)
final.positivity.graph
final.positivity.graph<-ggplot(data=final.pos.df) +
scale_y_continuous(expand=c(0,0)) +
scale_x_continuous(expand=c(0,0))+
ylab("Density") + xlab("Propensity Score for Final model") +
scale_color_manual(values=c("#000000","#D55E00")) +
geom_density(aes(x= final.propensity_score, group=factor(final.exposure), color=factor(final.exposure))) +
xlim(0,1)
final.positivity.graph
final$sw
summary(final$sw)
summary(nhefs$sw)
summary(s3q6sw)
s3q6sw <-(mean(nhefs$high_BP)/nhefs$propensity_score) *
nhefs$propensity_score + ((1-mean(nhefs$high_BP))/(1-nhefs$propensity_score)) *
(1-nhefs$high_BP)
summary(s3q6sw)
sw<- final$exposure*(mean(final$exposure)/final$propensity_score) +
(1-final$exposure)*(mean(1-final$exposure)/(1 - final$propensity_score))
summary(sw)
summary(final$sw)
#propensity score creation - using spline
final$propensity_score2 <-glm(factor(exposure) ~ factor(eligibility) + loss_num + bs(age, df=3, degree=3) + time_try_pregnant + bs(BMI, df=3, degree=3) +  bs(meanAP, df=3, degree=3), data = final,
family = binomial("logit"))$fitted.values
final.pos.df.2 <-data.frame(final$propensity_score2, Exposure=as.factor(final$live_birth))
final.pos.df.2
ggplot(final.pos.df.2) +
geom_density(aes(final.propensity_score2,
group=factor(Exposure),
color=factor(Exposure)))
final.positivity.graph
ggplot(final.pos.df.2) +
geom_density(aes(final.propensity_score2,
group=factor(Exposure),
color=factor(Exposure)))
final.positivity.graph
final.pos.df.2 <-data.frame(final$propensity_score2, Exposure=as.factor(final$exposure))
final.positivity.graph<-ggplot(data=final.pos.df) +
scale_y_continuous(expand=c(0,0)) +
scale_x_continuous(expand=c(0,0))+
ylab("Density") + xlab("Propensity Score for Final model") +
scale_color_manual(values=c("#000000","#D55E00")) +
geom_density(aes(x= final.propensity_score, group=factor(Exposure), color=factor(Exposure))) +
xlim(0,1)
final.positivity.graph
ggplot(final.pos.df.2) +
geom_density(aes(final.propensity_score2,
group=factor(Exposure),
color=factor(Exposure)))
final.positivity.graph
final.pos.df <-data.frame(final$propensity_score2, Exposure=as.factor(final$exposure))
final.positivity.graph<-ggplot(data=final.pos.df) +
scale_y_continuous(expand=c(0,0)) +
scale_x_continuous(expand=c(0,0))+
ylab("Density") + xlab("Propensity Score for Final model") +
scale_color_manual(values=c("#000000","#D55E00")) +
geom_density(aes(x= final.propensity_score, group=factor(final$exposure), color=factor(final$exposure))) +
xlim(0,1)
final.positivity.graph
final.pos.df
final.pos.df <-data.frame(final$propensity_score, Exposure=as.factor(final$exposure))
final.positivity.graph<-ggplot(data=final.pos.df) +
scale_y_continuous(expand=c(0,0)) +
scale_x_continuous(expand=c(0,0))+
ylab("Density") + xlab("Propensity Score for Final model") +
scale_color_manual(values=c("#000000","#D55E00")) +
geom_density(aes(x= final.propensity_score, group=factor(final$exposure), color=factor(final$exposure))) +
xlim(0,1)
final.positivity.graph
final.pos.df.2 <-data.frame(final$propensity_score2, Exposure=as.factor(final$exposure))
final.pos.df.2 <-data.frame(final$propensity_score2, Exposure=as.factor(final$exposure))
final.positivity.graph2<-ggplot(data=final.pos.df2) +
scale_y_continuous(expand=c(0,0)) +
scale_x_continuous(expand=c(0,0))+
ylab("Density") + xlab("Propensity Score for Final model") +
scale_color_manual(values=c("#000000","#D55E00")) +
geom_density(aes(x= final.propensity_score2, group=Exposure, color=Exposure)) +
xlim(0,1)
final.pos.df.2 <-data.frame(final$propensity_score2, Exposure=as.factor(final$exposure))
final.positivity.graph2<-ggplot(data=final.pos.df.2) +
scale_y_continuous(expand=c(0,0)) +
scale_x_continuous(expand=c(0,0))+
ylab("Density") + xlab("Propensity Score for Final model") +
scale_color_manual(values=c("#000000","#D55E00")) +
geom_density(aes(x= final.propensity_score2, group=Exposure, color=Exposure)) +
xlim(0,1)
final.positivity.graph2
final.positivity.graph
final.positivity.graph2
lm.table
glm.table
lm.table
marginal.standardization <-glm(live_birth ~ exposure + eligibility + loss_num + bs(age, df=3, degree=3) + time_try_pregnant + bs(BMI, df=3, degree=3) +  bs(meanAP, df=3, degree=3), data = final, family = binomial("logit"))
summary(marginal.standardization)
mu1 <-predict(marginal.standardization, newdata = transform(final, exposure = 1), type = "response")
mu0 <-predict(marginal.standardization, newdata = transform(final, exposure = 0), type = "response")
marg.standard.rd <- mean(mu1) - mean(mu0)
marg.standard.rd
bootfunc <- function(data, index) {
boot_dat <- data[index, ]
ms_model <-glm(live_birth ~ exposure + eligibility + loss_num + bs(age, df=3, degree=3) + time_try_pregnant + bs(BMI, df=3, degree=3) +  bs(meanAP, df=3, degree=3), data = final, family = binomial("logit"))
mu1 <- predict(ms_model, newdata = transform(boot_dat,
exposure = 1), type = "response")
mu0 <- predict(ms_model, newdata = transform(boot_dat,
exposure = 0), type = "response")
marg_stand_RD_ <- mean(mu1) - mean(mu0)
res <- c(marg_stand_RD_)
return(res)
}
set.seed(16)
boot_res <- boot(final, bootfunc, R = 200)
boot_RD <- boot.ci(boot_res, index = 1)
boot_res <- boot(final, bootfunc, R = 200)
boot_RD <- boot.ci(boot_res, index = 1)
marg_stand_RD_
return(res)
marg_stand_RD_
bootfunc <- function(data, index) {
boot_dat <- data[index, ]
ms_model <-glm(live_birth ~ exposure + eligibility + loss_num + bs(age, df=3, degree=3) + time_try_pregnant + bs(BMI, df=3, degree=3) +  bs(meanAP, df=3, degree=3), data = final, family = binomial("logit"))
mu1 <- predict(ms_model, newdata = transform(boot_dat,exposure = 1), type = "response")
mu0 <- predict(ms_model, newdata = transform(boot_dat,exposure = 0), type = "response")
marg_stand_RD_ <- mean(mu1) - mean(mu0)
res <- c(marg_stand_RD_)
return(res)
}
set.seed(16)
boot_res <- boot(final, bootfunc, R = 200)
boot_RD <- boot.ci(boot_res, index = 1)
mean(mu1)
mean(mu0)
mean(mu1) - mean(mu0)
marg_stand_RD
marg_stand_RD <- mean(mu1) - mean(mu0)
marg_stand_RD
marg_stand_RD
boot_res
boot_res <- boot(final, bootfunc, R = 200)
boot_res
boot_RD <- boot.ci(boot_res, index = 1)
boot_RD <- boot.ci(boot_res, index = 2)
boot_RD <- boot.ci(boot_res, index = 0)
boot_RD <- boot.ci(boot_res, index = 1)
bootfunc <- function(data, index) {
boot_dat <- data[index, ]
ms_model <-glm(live_birth ~ exposure + eligibility + loss_num + bs(age, df=3, degree=3) + time_try_pregnant + bs(BMI, df=3, degree=3) +  bs(meanAP, df=3, degree=3), data = boot_dat, family = binomial("logit"))
mu1 <- predict(ms_model, newdata = transform(boot_dat,exposure = 1), type = "response")
mu0 <- predict(ms_model, newdata = transform(boot_dat,exposure = 0), type = "response")
marg_stand_RD <- mean(mu1) - mean(mu0)
res <- c(marg_stand_RD)
return(res)
}
set.seed(16)
boot_res <- boot(final, bootfunc, R = 200)
boot_RD <- boot.ci(boot_res, index = 1)
bootfunc <- function(data, index) {
boot_dat <- data[index, ]
ms_model <-glm(live_birth ~ exposure + eligibility + loss_num + bs(age, df=3, degree=3) + time_try_pregnant + bs(BMI, df=3, degree=3) +  bs(meanAP, df=3, degree=3), data = boot_dat, family = binomial("logit"))
mu1 <- predict(ms_model, newdata = transform(boot_dat,exposure = 1), type = "response")
mu0 <- predict(ms_model, newdata = transform(boot_dat,exposure = 0), type = "response")
marg_stand_RD <- mean(mu1) - mean(mu0)
res <- c(marg_stand_RD)
return(res)
}
marg_stand_RD
boot_res <- boot(final, bootfunc, R = 200)
boot_RD <- boot.ci(boot_res, index = 1)
set.seed(16)
boot_res <- boot(final, bootfunc, R = 200)
boot_RD <- boot.ci(boot_res, index = 1)
bootfunc <- function(data, index) {
boot_dat <- data[index, ]
ms_model <-glm(live_birth ~ factor(exposure) + eligibility + loss_num + bs(age, df=3, degree=3) + time_try_pregnant + bs(BMI, df=3, degree=3) +  bs(meanAP, df=3, degree=3), data = boot_dat, family = binomial("logit"))
mu1 <- predict(ms_model, newdata = transform(boot_dat,exposure = 1), type = "response")
mu0 <- predict(ms_model, newdata = transform(boot_dat,exposure = 0), type = "response")
marg_stand_RD <- mean(mu1) - mean(mu0)
res <- c(marg_stand_RD)
return(res)
}
set.seed(16)
boot_res <- boot(final, bootfunc, R = 200)
boot_res <- boot(final, bootfunc, R = 200)
boot_RD <- boot.ci(boot_res, index = 1)
boot_res <- boot(boot_dat, bootfunc, R = 200)
bootfunc <- function(data, index) {
boot_dat <- data[index, ]
ms_model <-glm(live_birth ~ factor(exposure) + eligibility + loss_num + bs(age, df=3, degree=3) + time_try_pregnant + bs(BMI, df=3, degree=3) +  bs(meanAP, df=3, degree=3), data = boot_dat, family = binomial("logit"))
mu1 <- predict(ms_model, newdata = transform(boot_dat,exposure = 1), type = "response")
mu0 <- predict(ms_model, newdata = transform(boot_dat,exposure = 0), type = "response")
marg_stand_RD <- mean(mu1) - mean(mu0)
res <- c(marg_stand_RD)
return(res)
}
set.seed(16)
boot_res <- boot(boot_dat, bootfunc, R = 200)
boot_res <- boot(final, bootfunc, R = 200)
boot_RD <- boot.ci(boot_res, index = 1)
boot_res <- boot(bootfunc, data=final, R = 20)
boot_RD <- boot.ci(boot_res, index = 1)
boot_RD <- boot.ci(boot_res)
boot_res <- boot(bootfunc, data=final, R = 5000)
boot_RD <- boot.ci(boot_res, index = 1)
boot_res <- boot(bootfunc, data=final, R = 5000)
boot_RD <- boot.ci(boot_res, index = 1)
boot_RD
bootfunc <- function(data, index) {
boot_dat <- data[index, ]
ms_model <-glm(live_birth ~ exposure + eligibility + loss_num + bs(age, df=3, degree=3) + time_try_pregnant + bs(BMI, df=3, degree=3) +  bs(meanAP, df=3, degree=3), data = boot_dat, family = binomial("logit"))
mu1 <- predict(ms_model, newdata = transform(boot_dat,exposure = 1), type = "response")
mu0 <- predict(ms_model, newdata = transform(boot_dat,exposure = 0), type = "response")
marg_stand_RD <- mean(mu1) - mean(mu0)
res <- c(marg_stand_RD)
return(res)
}
boot_res2 <- boot(bootfunc, data=final, R = 5000)
boot_RD2 <- boot.ci(boot_res2, index = 1)
boot_RD2
results<-bootfunc(final)
results
rd_res <- tibble(
Estimand = "Risk Difference",
Estimate = round(results,3),
LCL = round(rd_ci$bca[4],2),
UCL = round(rd_ci$bca[5],2)
)
rd_res <- tibble(
Estimand = "Risk Difference",
Estimate = round(results,3),
LCL = round(boot_RD2$bca[4],2),
UCL = round(boot_RD2$bca[5],2)
)
kable(
rd_res
)
lm.table
lm.table
View(boot_dat)
View(boot_dat)
boot_dat
boot_dat <- data[index, ]
bootfunc <- function(data, index) {
boot_dat <- data[index, ]
ms_model <-glm(live_birth ~ exposure + eligibility + loss_num + bs(age, df=3, degree=3) + time_try_pregnant + bs(BMI, df=3, degree=3) +  bs(meanAP, df=3, degree=3), data = boot_dat, family = binomial("logit"))
mu1 <- predict(ms_model, newdata = transform(boot_dat,exposure = 1), type = "response")
mu0 <- predict(ms_model, newdata = transform(boot_dat,exposure = 0), type = "response")
marg_stand_RD <- mean(mu1) - mean(mu0)
res <- c(marg_stand_RD)
return(res)
}
bootfunc
View(bootfunc)
boot_dat <- data[index, ]
bootfunc <- function(data, index) {
boot_dat <- data[index, ]
ms_model <-glm(live_birth ~ exposure + eligibility + loss_num + bs(age, df=3, degree=3) + time_try_pregnant + bs(BMI, df=3, degree=3) +  bs(meanAP, df=3, degree=3), data = boot_dat, family = binomial("logit"))
mu1 <- predict(ms_model, newdata = transform(boot_dat,exposure = 1), type = "response")
mu0 <- predict(ms_model, newdata = transform(boot_dat,exposure = 0), type = "response")
marg_stand_RD <- mean(mu1) - mean(mu0)
res <- c(marg_stand_RD)
return(res)
}
results<-bootfunc(final)
set.seed(16)
boot_res2 <- boot(bootfunc, data=final, R = 5000)
bootfunc <- function(data, index) {
boot_dat <- data[index, ]
ms_model <-glm(live_birth ~ exposure + eligibility + loss_num + bs(age, df=3, degree=3) + time_try_pregnant + bs(BMI, df=3, degree=3) +  bs(meanAP, df=3, degree=3), data = boot_dat, family = binomial("logit"))
mu1 <- predict(ms_model, newdata = transform(boot_dat,exposure = 1), type = "response")
mu0 <- predict(ms_model, newdata = transform(boot_dat,exposure = 0), type = "response")
marg_stand_RD <- mean(mu1) - mean(mu0)
res <- c(marg_stand_RD)
return(res)
}
View(bootfunc)
View(q5bootfunc)
knitr::opts_chunk$set(echo = TRUE)
pacman::p_load(tidyverse, here, dplyr, gtsummary, gt, webshot2,sandwich,stats,here, ggplot2,stats, graphics, splines,boot,ggExtra,formatR,
gridExtra,skimr,Hmisc,RColorBrewer, lmtest, mice,gridExtra,kableExtra)
install.packages("kableExtra")
thm <- theme_classic() +
theme(
legend.position = "top",
legend.background = element_rect(fill = "transparent", colour = NA),
legend.key = element_rect(fill = "transparent", colour = NA)
)
theme_set(thm)
here::i_am("assignment/final_exam.Rmd")
final_data_loc <-here::here("data/aspirin.csv")
final <-read_csv(final_data_loc)
install.packages("kableExtra")
thm <- theme_classic() +
theme(
legend.position = "top",
legend.background = element_rect(fill = "transparent", colour = NA),
legend.key = element_rect(fill = "transparent", colour = NA)
)
theme_set(thm)
here::i_am("assignment/final_exam.Rmd")
final_data_loc <-here::here("data/aspirin.csv")
final <-read_csv(final_data_loc)
final_factor_names <- c("time_try_pregnant","loss_num") #create factor
final[, final_factor_names] <- lapply(final[, final_factor_names], factor)
#propensity score creation - using spline
final$propensity_score <-glm(exposure ~ eligibility + loss_num + bs(age, df=3, degree=3) + time_try_pregnant + bs(BMI, df=3, degree=3) +  bs(meanAP, df=3, degree=3), data = final,
family = binomial("logit"))$fitted.values
final$sw <-(mean(final$exposure)/final$propensity_score) * final$exposure + ((1-mean(final$exposure))/(1-final$propensity_score)) * (1-final$exposure)
final.model.lm <-lm(live_birth ~ exposure, data = final, weights = sw)
summary(final.model.lm)
est_rd <- round(coeftest(final.model.lm, vcov = sandwich(final.model.lm))[2,1],2)
ucl_rd <- round(est_rd + 1.96*coeftest(final.model.lm, vcov = sandwich(final.model.lm))[2,2],2)
lcl_rd <- round(est_rd - 1.96*coeftest(final.model.lm, vcov = sandwich(final.model.lm))[2,2],2)
lm.table<-kable(
tibble(
Estimand = c("Risk Difference"),
Estimate = c(est_rd),
LCL = c(lcl_rd),
UCL = c(ucl_rd)
)
)
final.model.glm <-glm(live_birth ~ exposure, data = final, weights = sw, family = binomial("identity"))
summary(final.model.glm)
est_rd.glm <- round(coeftest(final.model.glm, vcov = sandwich(final.model.glm))[2,1],2)
ucl_rd.glm <- round(est_rd.glm + 1.96*coeftest(final.model.glm, vcov = sandwich(final.model.glm))[2,2],2)
lcl_rd.glm <- round(est_rd.glm - 1.96*coeftest(final.model.glm, vcov = sandwich(final.model.glm))[2,2],2)
glm.table<-kable(
tibble(
Estimand = c("Risk Difference"),
Estimate = c(est_rd.glm),
LCL = c(lcl_rd.glm),
UCL = c(ucl_rd.glm)
)
)
lm.table
glm.table
marginal.standardization <-glm(live_birth ~ exposure + eligibility + loss_num + bs(age, df=3, degree=3) + time_try_pregnant + bs(BMI, df=3, degree=3) +  bs(meanAP, df=3, degree=3), data = final, family = binomial("logit"))
summary(marginal.standardization)
mu1 <-predict(marginal.standardization, newdata = transform(final, exposure = 1), type = "response")
mu0 <-predict(marginal.standardization, newdata = transform(final, exposure = 0), type = "response")
marg.standard.rd <- mean(mu1) - mean(mu0)
marg.standard.rd
bootfunc <- function(data, index) {
boot_dat <- data[index, ]
ms_model <-glm(live_birth ~ exposure + eligibility + loss_num + bs(age, df=3, degree=3) + time_try_pregnant + bs(BMI, df=3, degree=3) +  bs(meanAP, df=3, degree=3), data = boot_dat, family = binomial("logit"))
mu1 <- predict(ms_model, newdata = transform(boot_dat,exposure = 1), type = "response")
mu0 <- predict(ms_model, newdata = transform(boot_dat,exposure = 0), type = "response")
marg_stand_RD <- mean(mu1) - mean(mu0)
res <- c(marg_stand_RD)
return(res)
}
results<-bootfunc(final)
set.seed(16)
boot_res2 <- boot(bootfunc, data=final, R = 5000)
boot_RD2 <- boot.ci(boot_res2, index = 1)
rd_res <- tibble(
Estimand = "Risk Difference",
Estimate = round(results,3),
LCL = round(boot_RD2$bca[4],2),
UCL = round(boot_RD2$bca[5],2)
)
kable(
rd_res
)
boot_res2
boot_RD2
pacman::p_load(tidyverse, here, dplyr, gtsummary, gt, webshot2,sandwich,stats,here, ggplot2,stats, graphics, splines,boot,ggExtra,formatR,
gridExtra,skimr,Hmisc,RColorBrewer, lmtest, mice,gridExtra,kableExtra)
knitr::opts_chunk$set(echo = TRUE)
here::i_am("assignment/Section3_Assignment_2023.Rmd")
pacman::p_load(tidyverse, here, dplyr, gtsummary, gt, webshot2,sandwich,stats,here, ggplot2,stats, graphics, splines,boot,ggExtra,formatR,
gridExtra,skimr,Hmisc,RColorBrewer, lmtest)
file_loc <-here::here("data/nhefs_data.csv")
nhefs <-read_csv(file_loc)
s3q2m1 <-glm(high_BP ~ bs(smokeintensity, df=3, degree=3), data = nhefs, family = binomial(link = "logit"))
nhefs$s3q2m1pred <-predict(s3q2m1, type="response")
q2plot <-ggplot(nhefs) +  geom_line(aes(y=s3q2m1pred,x=smokeintensity),color="red") +
ylab("Risk of high blood pressure") + xlab("Smoke Intensity Variable")
ggsave(here::here("output/q2plot.png"), plot = q2plot,  scale=1, width=5, height=5, dpi=70)
knitr::include_graphics(here::here("output/q2plot.png"))
nhefs$marital <-ifelse(nhefs$marital == 6, 5, nhefs$marital)
nhefs$marital <-ifelse(nhefs$marital == 8, 2, nhefs$marital)
q3m1 <-glm(high_BP ~ qsmk + bs(smokeintensity, df=3, degree=3) + factor(sex) + bs(age, df=3, degree=3) + factor(race) + bs(school, df=3, degree=3) + factor(marital), data = nhefs,
family = binomial("logit"))
mu1 <-predict(q3m1, newdata = transform(nhefs, qsmk = 1), type = "response")
mu0 <-predict(q3m1, newdata = transform(nhefs, qsmk = 0), type = "response")
q3m1rr <-mean(mu1)/mean(mu0)
q3m1rd <- mean(mu1) - mean(mu0)
bootfunc <- function(data, index) {
boot_dat <- data[index, ]
ms_model <-glm(high_BP ~ qsmk + bs(smokeintensity, df=3, degree=3) + factor(sex) + bs(age, df=3, degree=3) + factor(race) + bs(school, df=3, degree=3) + factor(marital), data = boot_dat,
family = binomial("logit"))
mu1 <- predict(ms_model, newdata = transform(boot_dat,
qsmk = 1), type = "response")
mu0 <- predict(ms_model, newdata = transform(boot_dat,
qsmk = 0), type = "response")
marg_stand_RR_ <- mean(mu1)/mean(mu0)
marg_stand_RD_ <- mean(mu1) - mean(mu0)
res <- c(marg_stand_RD_, marg_stand_RR_)
return(res)
}
set.seed(16)
boot_res <- boot(nhefs, bootfunc, R = 2000)
View(final)
pacman::p_load(tidyverse, here, dplyr, gtsummary, gt, webshot2,sandwich,stats,here, ggplot2,stats, graphics, splines,boot,ggExtra,formatR,
gridExtra,skimr,Hmisc,RColorBrewer, lmtest, mice,gridExtra,kableExtra)
final_q8_model <-glm(live_birth ~ exposure + eligibility + loss_num + bs(age, df=3, degree=3) + time_try_pregnant + bs(BMI, df=3, degree=3) +  bs(meanAP, df=3, degree=3), data = final, family = binomial("logit"))
SE.q3m2rd<- sqrt(sandwich(final_q8_model)[2, 2])
q3m2rd
q3m2rd <-glm(high_BP ~ qsmk + bs(smokeintensity, df=3, degree=3) + factor(sex) + bs(age, df=3, degree=3) +
factor(race) + bs(school, df=3, degree=3) + factor(marital), data = nhefs,
family = gaussian(link = "identity"))
SE.q3m2rd<- sqrt(sandwich(q3m2rd)[2, 2])
q3m3rr <-glm(high_BP ~ qsmk + bs(smokeintensity, df=3, degree=3) + factor(sex) + bs(age, df=3, degree=3) +
factor(race) + bs(school, df=3, degree=3) + factor(marital), data = nhefs,
family = poisson(link ="log"))
SE.q3m3rr<-sqrt(sandwich(q3m3rr)[2, 2])
q3m2rd
final_q8_model
SE.q3m2rd
q3m2rd
SE.q3m2rd
SE.q3m2rd
SE.final_q8<- sqrt(sandwich(final_q8_model)[2, 2])
SE.final_q8
final_q8_model
SE.final_q8
final_q8_model
final_q8_UL <- 0.4691 + (1.96*SE.final_q8)
final_q8_LL <- 0.4691 - (1.96*SE.final_q8)
final_q8_UL
final_q8_LL
q3m2rd
summary(SE.q3m2rd)$coefficients[2, ]
final_q8_model <-glm(live_birth ~ exposure + eligibility + loss_num + bs(age, df=3, degree=3) + time_try_pregnant + bs(BMI, df=3, degree=3) +  bs(meanAP, df=3, degree=3), data = final, family = binomial("identity"))
final_q8_model <-glm(live_birth ~ exposure + eligibility + loss_num + bs(age, df=3, degree=3) + time_try_pregnant + bs(BMI, df=3, degree=3) +  bs(meanAP, df=3, degree=3), data = final, family = binomial("Identity"))
final_q8_model <-glm(live_birth ~ exposure + eligibility + loss_num + bs(age, df=3, degree=3) + time_try_pregnant + bs(BMI, df=3, degree=3) +  bs(meanAP, df=3, degree=3), data = final, family = binomial("identity"))
final_q8_model <-glm(live_birth ~ exposure + eligibility + loss_num + bs(age, df=3, degree=3) + time_try_pregnant + bs(BMI, df=3, degree=3) +  bs(meanAP, df=3, degree=3), data = final, family = binomial("identity"))
final_q8_model <-glm(live_birth ~ exposure + eligibility + loss_num + bs(age, df=3, degree=3) + time_try_pregnant + bs(BMI, df=3, degree=3) +  bs(meanAP, df=3, degree=3), data = final, family = binomial("logit"))
final_q8_model <-glm(live_birth ~ exposure + eligibility + loss_num + bs(age, df=3, degree=3) + time_try_pregnant + bs(BMI, df=3, degree=3) +  bs(meanAP, df=3, degree=3), data = final, family = gaussian("identity"))
final_q8_model
SE.final_q8<- sqrt(sandwich(final_q8_model)[2, 2])
final_q8_model <-glm(live_birth ~ exposure + eligibility + loss_num + bs(age, df=3, degree=3) + time_try_pregnant + bs(BMI, df=3, degree=3) +  bs(meanAP, df=3, degree=3), data = final, family = gaussian("identity"))
final_q8_model
final_q8_model <-glm(live_birth ~ exposure + eligibility + loss_num + bs(age, df=3, degree=3) + time_try_pregnant + bs(BMI, df=3, degree=3) +  bs(meanAP, df=3, degree=3), data = final, family = binomial("logit"))
identity
final_q8_model <-glm(live_birth ~ exposure + eligibility + loss_num + bs(age, df=3, degree=3) + time_try_pregnant + bs(BMI, df=3, degree=3) +  bs(meanAP, df=3, degree=3), data = final, family = binomial("identity"))
final_q8_model <-glm(live_birth ~ exposure + eligibility + loss_num + bs(age, df=3, degree=3) + time_try_pregnant + bs(BMI, df=3, degree=3) +  bs(meanAP, df=3, degree=3), data = final, family = poisson("identity"))
final_q8_model <-glm(live_birth ~ exposure + eligibility + loss_num + bs(age, df=3, degree=3) + time_try_pregnant + bs(BMI, df=3, degree=3) +  bs(meanAP, df=3, degree=3), data = final, family = gaussian("identity"))
final_q8_model
SE.final_q8<- sqrt(sandwich(final_q8_model)[2, 2])
SE.final_q8
final_q8_UL <- 0.4691 + (1.96*SE.final_q8)
final_q8_model
final_q8_UL <- 0.08673   + (1.96*SE.final_q8)
final_q8_LL <- 0.08673   - (1.96*SE.final_q8)
SE.final_q8<- sqrt(sandwich(final_q8_model)[2, 2])
final_q8_UL <- 0.08673   + (1.96*SE.final_q8)
final_q8_LL <- 0.08673   - (1.96*SE.final_q8)
final_q8_UL
SE.final_q8
final_q8_UL
final_q8_LL
final_q8_model
S4_Q4_table <- tibble(Method = c("Inverse Probability Weighting","Marginal Standardization"),
`Average Treatment Effect` = c("2.97", "3.03"),
`Standard Error` = c("0.59","0.60"),
`95% CI` = c("1.81-4.13", "1.85-4.20"))
knitr::kable(S4_Q4_table, caption= "Average Treatement Effect and the 95% CIs using Standard Deviation for the relationships between quitting smoking and change in weight between 1971-82")
set.seed(16)
final.exposure<-final$exposure
final.pos.df <-data.frame(final$propensity_score, Exposure=as.factor(final$exposure))
final.positivity.graph<-ggplot(data=final.pos.df) +
scale_y_continuous(expand=c(0,0)) +
scale_x_continuous(expand=c(0,0))+
ylab("Density") + xlab("Propensity Score for Final model") +
scale_color_manual(values=c("#000000","#D55E00")) +
geom_density(aes(x= final.propensity_score, group=factor(final$exposure), color=factor(final$exposure))) +
xlim(0,1)
final.positivity.graph
#same plot below
final.positivity.graph
ggsave(here::here("output/final.positivity.graph.png"), plot = final.positivity.graph,  scale=1, width=5, height=5, dpi=70)
knitr::include_graphics(here::here("output/final.positivity.graph.png"))
pacman::p_load(tidyverse, here, dplyr, gtsummary, gt, webshot2,sandwich,stats,here, ggplot2,stats, graphics, splines,boot,ggExtra,formatR,
gridExtra,skimr,Hmisc,RColorBrewer, lmtest, mice,gridExtra)
